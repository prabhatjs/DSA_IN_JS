hello dsa Javascript

1.'git-init' power your folder to be managed by git, and initialises a new empty repository it also create a .git folder that has all relevent logic to manage version of your project.

touch command you to create file for you ..it's linux comand

git status-

$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new.txt
        readmefile.txt

nothing added to commit but untracked files present (use "git add" to track)


thare are three areas in which your file changes are actually reside
--working area
--staged area
--repository area

when the file on what stage?

what is working area?
currently you seen 
 
new.txt
readmefile.txt -> (is on your working area (means thay are not commited only intialized, that changes are not traked by git called untracked file ))

working area ->thare can be bunch of file that are not currently handled by git.
it means that changes done or to be done in those file are not manged by git yet. file which is in working area is considered to be not in the staging area when we do 'git' status and we see a bunch if 'untracked files' then these are actullay called working area.

staging area->what all files are going to be part of next version that we will create.this staged are is place where git know what chnages will be done from the last version to the next version.


how to add in satged area
use git add <file>

git add readme.txt(after this is not untracked file) this in staged area if you want unstaged now use this command 

git rm --cached <file>

 
repository area--> this are actually contains the details of all your previous registerd version 
and the files in this area, git already manages them and knows their version history


'git add <file> ->moves file from working area to staging area

'git rm --cached <file> -> moves file from staging area to working area 

---version manages by commit (commit means you create verison )

'commit'->commit is perticulr version of the project it capture a snapshot of the project staged changes and create a version out of it--

'git commit' registers staging chnages to a commit  

open vm editor - i use for insert (insert your mesg then  esc button clcik and :wq back to in your git bash)

how you see your all commit 


'git log' list down all the commit;

if you want to exit out of git log propt press 'q'

 
if i am changes in tracked file but i dont want in file we want file like as its look like its shown first then 
use this command 

git restore <file> --> it remove all files changes from the staging are to be commited this can be useful if we some direty piese of code and now no more want it. instead of deleting every changes line by line we can restore it or yoou can say restore last clean version of the file.


git restore --staged <file> -> it removes file from staging area to the working area.
this only works if changes are in your staging area..

diff between git rm and git restore
if you want to move the whole file back to the untracked state then we do rm ,otherwise if we just want to the changes to be moved in working area or staging area we use git restore.

git diff (hascodecommit1 hascodecommit2 ) two commit..


git commit -m <"your commit masage"> 

what is git remote 
git remte help to one repo to other repository connect 

add all file 

git add .:this comand all all file in folder in staged area 


multiple people work--
if any one changes in application folder and brach you need to every time to pull the remote repo from git hud because if you do commit no is 8 but on git hud commit no 9 it means anything will change in repo.

if you need pull the repo from git and its branch by default is 'master branch'
  
git pull <remote name> <branch name> :->
download latest changes from the branch of the mention rempte in yoour local repo


@@@@@@@@@@@@@#########

Recommended practice to do
-make changes 
-git add<file>
-git commit
-git pull
-git push

---------------------------------------------

 



